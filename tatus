[1mdiff --git a/Gemfile b/Gemfile[m
[1mindex 72eff2b..c47eccf 100644[m
[1m--- a/Gemfile[m
[1m+++ b/Gemfile[m
[36m@@ -8,7 +8,7 @@[m [mgem "rails", "~> 7.0.4", ">= 7.0.4.2"[m
 [m
 # Use sqlite3 as the database for Active Record[m
 gem "sqlite3", "~> 1.4"[m
[31m-[m
[32m+[m[32mgem 'byebug'[m
 # Use the Puma web server [https://github.com/puma/puma][m
 gem "puma", "~> 5.0"[m
 [m
[36m@@ -18,6 +18,7 @@[m [mgem 'rack-cors'[m
 gem 'rubocop'[m
 gem 'fast_jsonapi'[m
 gem "httparty"[m
[32m+[m[32mgem "rubocop"[m
 [m
 # Build JSON APIs with ease [https://github.com/rails/jbuilder][m
 # gem "jbuilder"[m
[1mdiff --git a/Gemfile.lock b/Gemfile.lock[m
[1mindex acfabb5..4521644 100644[m
[1m--- a/Gemfile.lock[m
[1m+++ b/Gemfile.lock[m
[36m@@ -71,6 +71,7 @@[m [mGEM[m
     bootsnap (1.16.0)[m
       msgpack (~> 1.2)[m
     builder (3.2.4)[m
[32m+[m[32m    byebug (11.1.3)[m
     concurrent-ruby (1.2.2)[m
     crass (1.0.6)[m
     date (3.3.3)[m
[36m@@ -225,6 +226,7 @@[m [mPLATFORMS[m
 [m
 DEPENDENCIES[m
   bootsnap[m
[32m+[m[32m  byebug[m
   debug[m
   devise[m
   devise-jwt[m
[1mdiff --git a/app/services/coin_trading_api/coin_fetch_data.rb b/app/services/coin_trading_api/coin_fetch_data.rb[m
[1mnew file mode 100644[m
[1mindex 0000000..d534554[m
[1m--- /dev/null[m
[1m+++ b/app/services/coin_trading_api/coin_fetch_data.rb[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32mmodule CoinTradingApi[m
[32m+[m[32m  class CoinFetchData[m[41m [m
[32m+[m[32m  require 'httparty'[m
[32m+[m
[32m+[m[32m  def trending_coins(currency = 'usd')[m
[32m+[m[32m    render_response("/markets?vs_currency=#{currency}&order=gecko_desc&per_page=10&page=1&sparkline=false&price_change_percentage=24h")[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def coin_list(currency = 'usd')[m
[32m+[m[32m    render_response("/markets?vs_currency=#{currency}&order=market_cap_desc&per_page=100&page=1&sparkline=false")[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def single_coin(id)[m
[32m+[m[32m    render_response("/#{id}")[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def historical_data(id = 'bitcoin', currency = 'usd', days = 365)[m
[32m+[m[32m    render_response("/#{id}/market_chart?vs_currency=#{currency}&days=#{days}")[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  private[m
[32m+[m
[32m+[m[32m  def render_response(url_path)[m
[32m+[m[32m    response = HTTParty.get(base_url + url_path )[m
[32m+[m[32m    rescue StandardError => e[m
[32m+[m[32m        { success: false, error: e }[m
[32m+[m[32m      else[m
[32m+[m[32m        { success: true, payload: response.parsed_response }[m
[32m+[m[32m    end[m
[32m+[m
[32m+[m[32m  def base_url[m
[32m+[m[32m    'https://api.coingecko.com/api/v3/coins'[m
[32m+[m[32m  end[m
[32m+[m[32m  end[m
[32m+[m[32mend[m
